@startuml AviationStackFullFlow
actor User
group Endpoint: /api/v1/flights
   User -> API : GET /api/v1/flights
   API -> FlightController : getFlightsController
   FlightController -> AviationStackService : syncFlightsIfNeeded()
   alt Not synchronized today
      AviationStackService -> Redis : Check cache
      AviationStackService -> AviationStack : Call external API
      AviationStackService -> MySQL : Insert/update flights
      AviationStackService -> Redis : Store in cache
      AviationStackService -> Mailer : Notify if failure
   end
   FlightController -> FlightQueryService : getFlightsFromDb()
   FlightQueryService -> MySQL : Filtered query
   FlightController -> AviationStackService : logApiCall
   FlightController -> API : Respond with flight data
end group
group Endpoint: /api/v1/airports
   User -> API : GET /api/v1/airports
   API -> AirportController : getAirportsController
   AirportController -> AviationStackService : syncAirportsIfNeeded()
   alt Not synchronized today
      AviationStackService -> Redis : Check cache
      AviationStackService -> AviationStack : Call external API
      AviationStackService -> MySQL : Insert/update airports
      AviationStackService -> Redis : Store in cache
      AviationStackService -> Mailer : Notify if failure
   end
   AirportController -> AirportQueryService : getAirportsFromDb()
   AirportQueryService -> MySQL : Query with search and pagination
   AirportController -> AviationStackService : logApiCall
   AirportController -> API : Respond with airport data
end group
group Endpoint: /api/v1/airlines
   User -> API : GET /api/v1/airlines
   API -> AirlineController : getAirlinesController
   AirlineController -> AviationStackService : syncAirlinesIfNeeded()
   alt Not synchronized today
      AviationStackService -> Redis : Check cache
      AviationStackService -> AviationStack : Call external API
      AviationStackService -> MySQL : Insert/update airlines
      AviationStackService -> Redis : Store in cache
      AviationStackService -> Mailer : Notify if failure
   end
   AirlineController -> AirlineQueryService : getAirlinesFromDb()
   AirlineQueryService -> MySQL : Query with search and pagination
   AirlineController -> AviationStackService : logApiCall
   AirlineController -> API : Respond with airline data
end group
@enduml
